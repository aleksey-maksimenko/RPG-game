(()=>{"use strict";const t=class{constructor(t,e,s,i){this.name=t,this.attack=e,this.durability=s,this.baseDurability=s,this.range=i}takeDamage(t){this.durability-=t,this.durability<0&&(this.durability=0)}getDamage(){return this.durability<=0?0:this.durability/this.baseDurability*100>=30?this.attack:Math.floor(this.attack/2)}isBroken(){return 0===this.durability}},e=class extends t{constructor(){super("Рука",1,1/0,1)}},s=class extends t{constructor(){super("Нож",5,300,1)}},i=class{constructor(t,s){this.life=100,this.magic=20,this.speed=1,this.attack=10,this.agility=5,this.luck=10,this.description="Игрок",this.weapon=new e,this.position=t,this.name=s,this.baseLife=this.life,this.baseMagic=this.magic}getLuck(){return(Math.floor(101*Math.random())+this.luck)/100}getDamage(t){const e=this.weapon.getDamage();return t>this.weapon.range?0:(this.attack+e)*this.getLuck()/t}takeDamage(t){this.life-=t,console.log(`${this.name} получил ${t} урона`),this.life<0&&(this.life=0,console.log(`${this.name} достигает нулевой отметки здоровья`))}isDead(){return 0===this.life}moveLeft(t){const e=Math.min(t,this.speed);this.position-=e}moveRight(t){const e=Math.min(t,this.speed);this.position+=e}isAttackBlocked(){return this.getLuck()>(100-this.luck)/100}dodged(){return this.getLuck()>(100-this.agility-3*this.speed)/100}takeAttack(t){if(this.isAttackBlocked())return this.weapon.takeDamage(t),void console.log(`${this.name} заблокировал атаку, урон по оружию: ${t}`);this.dodged()?console.log(`${this.name} уклонился от атаки`):this.takeDamage(t)}checkWeapon(){if(this.weapon.isBroken()&&!(this.weapon instanceof e))return this.weapon instanceof s?(console.log(`${this.name} теряет нож и остается с голыми руками`),void(this.weapon=new e)):void 0}tryAttack(t){let e=0,s=0;if(console.log(`${this.name} (клетка ${this.position}) пробует атаковать ${t.name} (клетка ${t.position})`),this.position===t.position)t.moveRight(1),console.log(`${t.name} отлетает на позицию ${t.position} и получит удвоенный урон от ${this.name}`),e=this.getDamage(1),e*=2;else{if(s=Math.abs(this.position-t.position),s>this.weapon.range)return void console.log(`${this.name} с радиусом атаки ${this.weapon.range} не достаёт до ${t.name} на расстоянии ${s}`);e=this.getDamage(s)}console.log(`рассчитан урон: ${e}`),console.log(`${this.name} атакует ${t.name} на ${e} урона`),this.weapon.takeDamage(10*this.getLuck()),t.takeAttack(e),this.checkWeapon(),t.checkWeapon()}chooseEnemy(t){let e=t.filter((t=>t!==this&&!t.isDead()));if(0===e.length)return null;let s=e[0];for(let t=1;t<e.length;t++)e[t].life<s.life&&(s=e[t]);return s}moveToEnemy(t){if(t&&!t.isDead())if(this.position-t.position<-1){let e=Math.min(t.position-this.position-1,this.speed);console.log(`${this.name} (${this.position}) движется вправо к ${t.name} (${t.position})  на ${e}`),this.moveRight(e)}else if(this.position-t.position>1){let e=Math.min(this.position-t.position-1,this.speed);console.log(`${this.name} (${this.position}) движется влево к ${t.name} (${t.position}) на ${e}`),this.moveLeft(e)}else console.log(`${this.name} (${this.position}) уже рядом с ${t.name} (${t.position})`);else console.log(`${this.name} не может двигаться к мёртвому врагу`)}turn(t){console.log(`\nХодит ${this.name} (уровень здоровья ${this.life})`);const e=this.chooseEnemy(t);e?(console.log(`Выбран противник ${e.name} (уровень здоровья ${e.life})`),this.moveToEnemy(e),this.tryAttack(e),e.isDead()&&console.log(`${e.name} пал в бою после атаки ${this.name}`)):console.log(`${this.name} не нашёл врагов для атаки`)}},a=class extends t{constructor(){super("Меч",25,500,1)}},o=class extends i{constructor(t,e){super(t,e),this.life=120,this.attack=10,this.speed=2,this.weapon=new a,this.description="Воин",this.baseLife=this.life}takeDamage(t){let e=this.life/this.baseLife*100,s=this.getLuck();if(e<50&&s>.8)if(this.magic>t)this.magic-=t;else{const e=t-this.magic;this.magic=0,this.life-=e}else super.takeDamage(t);this.life<0&&(this.life=0)}checkWeapon(){this.weapon.isBroken()&&(this.weapon instanceof a?(console.log(`${this.name} теряет меч и берёт нож`),this.weapon=new s):super.checkWeapon())}},n=class extends t{constructor(){super("Лук",10,200,3)}},h=class extends i{constructor(t,e){super(t,e),this.life=80,this.magic=35,this.attack=5,this.agility=10,this.weapon=new n,this.description="Лучник",this.baseLife=this.life,this.baseMagic=this.magic}getDamage(t){const e=this.weapon.getDamage(),s=this.weapon.range;return t>s?0:(this.attack+e)*this.getLuck()*t/s}checkWeapon(){this.weapon.isBroken()&&(this.weapon instanceof n?(console.log(`${this.name} теряет лук и берёт нож.`),this.weapon=new s):super.checkWeapon())}},c=class extends t{constructor(){super("Посох",8,300,2)}},l=class extends i{constructor(t,e){super(t,e),this.life=70,this.magic=100,this.attack=5,this.agility=8,this.weapon=new c,this.description="Маг",this.baseLife=this.life,this.baseMagic=this.magic}takeDamage(t){this.magic/this.baseMagic*100>50&&(t/=2,this.magic-=12,this.magic<0&&(this.magic=0)),super.takeDamage(t)}checkWeapon(){this.weapon.isBroken()&&(this.weapon instanceof c?(console.log(`${this.name} теряет посох и берёт нож`),this.weapon=new s):super.checkWeapon())}},r=class extends a{constructor(){super(),this.name="Секира",this.attack=27,this.durability=800}},g=class extends n{constructor(){super(),this.name="Длинный лук",this.attack=15,this.range=4}},p=class extends c{constructor(){super(),this.name="Посох Бури",this.attack=10,this.range=3}};console.log("Index module loaded. Hello world!"),console.log("Creating warrior...");let m=new o(0,"Алёша Попович");console.log("Warrior created");let u=new h(6,"Леголас"),k=new l(4,"Гендальф"),f=new class extends l{constructor(t,e){super(t,e),this.description="Демиург",this.weapon=new p,this.life=80,this.magic=120,this.attack=6,this.luck=12,this.baseLife=this.life,this.baseMagic=this.magic}getDamage(t){return this.magic>0&&this.getLuck()>.6?1.5*super.getDamage(t):super.getDamage(t)}checkWeapon(){this.weapon.isBroken()&&(this.weapon instanceof p?(console.log(`${this.name} теряет посох бури и берёт нож`),this.weapon=new s):super.checkWeapon())}}(8,"Истас"),d=new class extends o{constructor(t,e){super(t,e),this.description="Гном",this.life=130,this.attack=15,this.luck=20,this.weapon=new r,this.baseLife=this.life,this.baseMagic=this.magic}takeDamage(t){this.getLuck()>.5&&0==Math.floor(6*Math.random())&&(t/=2),super.takeDamage(t)}checkWeapon(){this.weapon.isBroken()&&(this.weapon instanceof r?(console.log(`${this.name} теряет секиру и берёт нож`),this.weapon=new s):super.checkWeapon())}}(11,"Гримли"),w=new class extends h{constructor(t,e){super(t,e),this.weapon=new g,this.description="Арбалетчик",this.life=85,this.attack=8,this.agility=20,this.luck=15,this.baseLife=this.life,this.baseMagic=this.magic}checkWeapon(){this.weapon.isBroken()&&(this.weapon instanceof g?(console.log(`${this.name} теряет арбалет и берёт нож`),this.weapon=new s):super.checkWeapon())}}(13,"Лукарий");console.log("Characters were created"),function(t){for(;t.filter((t=>!t.isDead())).length>1;)for(let e of t)e.isDead()||e.turn(t);const e=t.find((t=>!t.isDead()));console.log(`Победитель: ${e.name}, оставшаяся жизнь: ${e.life}`)}([m,u,k,f,d,w])})();
//# sourceMappingURL=bundle.js.map