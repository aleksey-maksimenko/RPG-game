{"version":3,"file":"bundle.js","mappings":"mBA+BA,QA/BA,MACE,WAAAA,CAAYC,EAAMC,EAAQC,EAAYC,GACpCC,KAAKJ,KAAOA,EACZI,KAAKH,OAASA,EACdG,KAAKF,WAAaA,EAClBE,KAAKC,eAAiBH,EACtBE,KAAKD,MAAQA,CACf,CACA,UAAAG,CAAWC,GACTH,KAAKF,YAAcK,EACfH,KAAKF,WAAa,IACpBE,KAAKF,WAAa,EAEtB,CACA,SAAAM,GACE,OAAIJ,KAAKF,YAAc,EACd,EAGWE,KAAKF,WAAaE,KAAKC,eAAkB,KAC3C,GACTD,KAAKH,OAELQ,KAAKC,MAAMN,KAAKH,OAAS,EAEpC,CACA,QAAAU,GACE,OAA2B,IAApBP,KAAKF,UACd,GCpBF,EANA,cAAkB,EAChB,WAAAH,GACEa,MAAM,OAAQ,EAAGC,IAAU,EAC7B,GCGF,EANA,cAAoB,EAClB,WAAAd,GACEa,MAAM,MAAO,EAAG,IAAK,EACvB,GCyKF,EA1KA,MACE,WAAAb,CAAYe,EAAUd,GACpBI,KAAKW,KAAO,IACZX,KAAKY,MAAQ,GACbZ,KAAKa,MAAQ,EACbb,KAAKH,OAAS,GACdG,KAAKc,QAAU,EACfd,KAAKe,KAAO,GACZf,KAAKgB,YAAc,QACnBhB,KAAKiB,OAAS,IAAI,EAClBjB,KAAKU,SAAWA,EAChBV,KAAKJ,KAAOA,EACZI,KAAKkB,SAAWlB,KAAKW,KACrBX,KAAKmB,UAAYnB,KAAKY,KACxB,CAEA,OAAAQ,GAEE,OADqBf,KAAKC,MAAsB,IAAhBD,KAAKgB,UACdrB,KAAKe,MAAQ,GACtC,CAEA,SAAAX,CAAUkB,GACR,MAAMC,EAAevB,KAAKiB,OAAOb,YACjC,OAAIkB,EAAWtB,KAAKiB,OAAOlB,MAClB,GAEDC,KAAKH,OAAS0B,GAAgBvB,KAAKoB,UAAYE,CACzD,CAEA,UAAApB,CAAWC,GACTH,KAAKW,MAAQR,EACbqB,QAAQC,IAAI,GAAGzB,KAAKJ,gBAAgBO,WAChCH,KAAKW,KAAO,IACdX,KAAKW,KAAO,EACZa,QAAQC,IAAI,GAAGzB,KAAKJ,2CAExB,CAEA,MAAA8B,GACE,OAAqB,IAAd1B,KAAKW,IACd,CAEA,QAAAgB,CAASL,GACP,MAAMM,EAAevB,KAAKwB,IAAIP,EAAUtB,KAAKa,OAC7Cb,KAAKU,UAAYkB,CACnB,CAEA,SAAAE,CAAUR,GACR,MAAMM,EAAevB,KAAKwB,IAAIP,EAAUtB,KAAKa,OAC7Cb,KAAKU,UAAYkB,CACnB,CAEA,eAAAG,GACE,OAAO/B,KAAKoB,WAAa,IAAMpB,KAAKe,MAAQ,GAC9C,CAEA,MAAAiB,GACE,OAAOhC,KAAKoB,WAAa,IAAMpB,KAAKc,QAAuB,EAAbd,KAAKa,OAAa,GAClE,CAEA,UAAAoB,CAAW9B,GACT,GAAIH,KAAK+B,kBAGP,OAFA/B,KAAKiB,OAAOf,WAAWC,QACvBqB,QAAQC,IAAI,GAAGzB,KAAKJ,4CAA4CO,KAI9DH,KAAKgC,SACPR,QAAQC,IAAI,GAAGzB,KAAKJ,2BAItBI,KAAKE,WAAWC,EAElB,CAEA,WAAA+B,GACMlC,KAAKiB,OAAOV,aACVP,KAAKiB,kBAAkB,GACzBO,QAAQC,IAAI,GAAGzB,KAAKJ,8CACpBI,KAAKiB,OAAS,IAAI,GAEpBjB,KAAKiB,OAAS,IAAI,EAGtB,CAEA,SAAAkB,CAAUC,GACR,IAAIjC,EAAS,EACTmB,EAAW,EAGf,GAFAE,QAAQC,IAAI,GAAGzB,KAAKJ,gBAAgBI,KAAKU,+BAA+B0B,EAAMxC,gBAAgBwC,EAAM1B,aAEhGV,KAAKU,WAAa0B,EAAM1B,SAC1B0B,EAAMN,UAAU,GAChBN,QAAQC,IAAI,GAAGW,EAAMxC,4BAA4BwC,EAAM1B,wCAAwCV,KAAKJ,QACpGO,EAASH,KAAKI,UAAU,GACxBD,GAAU,MAEP,CAEJ,GADAmB,EAAWjB,KAAKgC,IAAIrC,KAAKU,SAAW0B,EAAM1B,UACtCY,EAAWtB,KAAKiB,OAAOlB,MAEzB,YADAyB,QAAQC,IAAI,GAAGzB,KAAKJ,yBAAyBI,KAAKiB,OAAOlB,uBAAuBqC,EAAMxC,sBAAsB0B,KAG9GnB,EAASH,KAAKI,UAAUkB,EACzB,CACAE,QAAQC,IAAI,mBAAmBtB,KAC/BqB,QAAQC,IAAI,GAAGzB,KAAKJ,gBAAgBwC,EAAMxC,WAAWO,WAErDH,KAAKiB,OAAOf,WAAW,GAAKF,KAAKoB,WACjCgB,EAAMH,WAAW9B,GACjBH,KAAKkC,cACLE,EAAMF,aACR,CAEA,WAAAI,CAAYC,GACV,IAAIC,EAAeD,EAAQE,QAAOC,GAAUA,IAAW1C,OAAS0C,EAAOhB,WAEvE,GAA4B,IAAxBc,EAAaG,OACf,OAAO,KAGT,IAAIC,EAAcJ,EAAa,GAE/B,IAAK,IAAIK,EAAI,EAAGA,EAAIL,EAAaG,OAAQE,IACnCL,EAAaK,GAAGlC,KAAOiC,EAAYjC,OACrCiC,EAAcJ,EAAaK,IAI/B,OAAOD,CACT,CAEA,WAAAE,CAAYV,GACV,GAAKA,IAASA,EAAMV,SAKpB,GAAI1B,KAAKU,SAAW0B,EAAM1B,UAAY,EAAG,CACvC,IAAIqC,EAAiB1C,KAAKwB,IAAIO,EAAM1B,SAAWV,KAAKU,SAAW,EAAGV,KAAKa,OACvEW,QAAQC,IAAI,GAAGzB,KAAKJ,SAASI,KAAKU,+BAA+B0B,EAAMxC,SAASwC,EAAM1B,iBAAiBqC,KACvG/C,KAAK8B,UAAUiB,EACjB,MAAO,GAAI/C,KAAKU,SAAW0B,EAAM1B,SAAW,EAAG,CAC7C,IAAIqC,EAAiB1C,KAAKwB,IAAI7B,KAAKU,SAAW0B,EAAM1B,SAAW,EAAGV,KAAKa,OACvEW,QAAQC,IAAI,GAAGzB,KAAKJ,SAASI,KAAKU,8BAA8B0B,EAAMxC,SAASwC,EAAM1B,gBAAgBqC,KACrG/C,KAAK2B,SAASoB,EAChB,MACEvB,QAAQC,IAAI,GAAGzB,KAAKJ,SAASI,KAAKU,yBAAyB0B,EAAMxC,SAASwC,EAAM1B,kBAbhFc,QAAQC,IAAI,GAAGzB,KAAKJ,2CAexB,CAEA,IAAAoD,CAAKT,GACHf,QAAQC,IAAI,WAAWzB,KAAKJ,0BAA0BI,KAAKW,SAC3D,MAAMyB,EAAQpC,KAAKsC,YAAYC,GAE3BH,GACFZ,QAAQC,IAAI,oBAAoBW,EAAMxC,0BAA0BwC,EAAMzB,SACtEX,KAAK8C,YAAYV,GACjBpC,KAAKmC,UAAUC,GAEXA,EAAMV,UACRF,QAAQC,IAAI,GAAGW,EAAMxC,8BAA8BI,KAAKJ,SAG1D4B,QAAQC,IAAI,GAAGzB,KAAKJ,iCAExB,GCnKF,EANA,cAAoB,EAClB,WAAAD,GACEa,MAAM,MAAO,GAAI,IAAK,EACxB,GC+BF,EAhCA,cAAsB,EAEpB,WAAAb,CAAYe,EAAUd,GACpBY,MAAME,EAAUd,GAChBI,KAAKW,KAAO,IACZX,KAAKH,OAAS,GACdG,KAAKa,MAAQ,EACbb,KAAKiB,OAAS,IAAI,EAClBjB,KAAKgB,YAAc,OACnBhB,KAAKkB,SAAWlB,KAAKW,IACvB,CAEA,UAAAT,CAAWC,GACT,IAAI8C,EAAejD,KAAKW,KAAOX,KAAKkB,SAAY,IAC5CH,EAAOf,KAAKoB,UAChB,GAAI6B,EAAc,IAAMlC,EAAO,GAC7B,GAAIf,KAAKY,MAAQT,EACfH,KAAKY,OAAST,MACT,CACL,MAAM+C,EAAkB/C,EAASH,KAAKY,MACtCZ,KAAKY,MAAQ,EACbZ,KAAKW,MAAQuC,CACf,MAEA1C,MAAMN,WAAWC,GAEfH,KAAKW,KAAO,IACdX,KAAKW,KAAO,EAEhB,GCzBF,EANA,cAAkB,EAChB,WAAAhB,GACEa,MAAM,MAAO,GAAI,IAAK,EACxB,GCqBF,EAtBA,cAAqB,EACnB,WAAAb,CAAYe,EAAUd,GACpBY,MAAME,EAAUd,GAChBI,KAAKW,KAAO,GACZX,KAAKY,MAAQ,GACbZ,KAAKH,OAAS,EACdG,KAAKc,QAAU,GACfd,KAAKiB,OAAS,IAAI,EAClBjB,KAAKgB,YAAc,SACnBhB,KAAKkB,SAAWlB,KAAKW,KACrBX,KAAKmB,UAAYnB,KAAKY,KACxB,CACA,SAAAR,CAAUkB,GACR,MAAMC,EAAevB,KAAKiB,OAAOb,YAC3B+C,EAAcnD,KAAKiB,OAAOlB,MAChC,OAAIuB,EAAW6B,EACN,GAEDnD,KAAKH,OAAS0B,GAAgBvB,KAAKoB,UAAYE,EAAW6B,CACpE,GCfF,EANA,cAAoB,EAClB,WAAAxD,GACEa,MAAM,QAAS,EAAG,IAAK,EACzB,GC0BF,EA3BA,cAAmB,EACjB,WAAAb,CAAYe,EAAUd,GACpBY,MAAME,EAAUd,GAChBI,KAAKW,KAAO,GACZX,KAAKY,MAAQ,IACbZ,KAAKH,OAAS,EACdG,KAAKc,QAAU,EACfd,KAAKiB,OAAS,IAAI,EAClBjB,KAAKgB,YAAc,MACnBhB,KAAKkB,SAAWlB,KAAKW,KACrBX,KAAKmB,UAAYnB,KAAKY,KACxB,CACA,UAAAV,CAAWC,GACWH,KAAKY,MAAQZ,KAAKmB,UAAa,IAChC,KACjBhB,GAAU,EACVH,KAAKY,OAAS,GACVZ,KAAKY,MAAQ,IAGfZ,KAAKY,MAAQ,IAGjBJ,MAAMN,WAAWC,EACnB,GChBF,EAVA,cAAkB,EAChB,WAAAR,GACEa,QACAR,KAAKJ,KAAO,SACZI,KAAKH,OAAS,GACdG,KAAKF,WAAa,IAClBE,KAAKC,eAAiBD,KAAKF,UAC7B,GCEF,EATA,cAAsB,EACpB,WAAAH,GACEa,QACAR,KAAKJ,KAAO,cACZI,KAAKH,OAAS,GACdG,KAAKD,MAAQ,CACf,GCGF,EATA,cAAyB,EACvB,WAAAJ,GACEa,QACAR,KAAKJ,KAAO,aACZI,KAAKH,OAAS,GACdG,KAAKD,MAAQ,CACf,GCEFyB,QAAQC,IAAI,qCAGZD,QAAQC,IAAI,uBACZ,IAAI2B,EAAU,IAAI,EAAQ,EAAG,iBAC7B5B,QAAQC,IAAI,mBACZ,IAAI4B,EAAU,IAAI,EAAO,EAAG,WACxBC,EAAU,IAAI,EAAK,EAAG,YACtBC,EAAU,ICdd,cAAuB,EACrB,WAAA5D,CAAYe,EAAUd,GACpBY,MAAME,EAAUd,GAChBI,KAAKgB,YAAc,UACnBhB,KAAKiB,OAAS,IAAI,EAClBjB,KAAKW,KAAO,GACZX,KAAKY,MAAQ,IACbZ,KAAKH,OAAS,EACdG,KAAKe,KAAO,GACZf,KAAKkB,SAAWlB,KAAKW,KACrBX,KAAKmB,UAAYnB,KAAKY,KACxB,CACA,SAAAR,CAAUkB,GACR,OAAItB,KAAKY,MAAQ,GAAKZ,KAAKoB,UAAY,GACF,IAA5BZ,MAAMJ,UAAUkB,GAEhBd,MAAMJ,UAAUkB,EAE3B,GDJyB,EAAG,SAC1BkC,EAAU,IEfd,cAAoB,EAClB,WAAA7D,CAAYe,EAAUd,GACpBY,MAAME,EAAUd,GAChBI,KAAKgB,YAAc,OACnBhB,KAAKW,KAAO,IACZX,KAAKH,OAAS,GACdG,KAAKe,KAAO,GACZf,KAAKiB,OAAS,IAAI,EAClBjB,KAAKkB,SAAWlB,KAAKW,KACrBX,KAAKmB,UAAYnB,KAAKY,MACtBZ,KAAKyD,aAAe,CACtB,CACA,UAAAvD,CAAWC,GACTH,KAAKyD,eACDzD,KAAKoB,UAAY,IAAOqC,aAAe,GAAK,IAC9CtD,GAAU,GAEZK,MAAMN,WAAWC,EACnB,GFHsB,GAAI,UACxBuD,EAAU,IGhBd,cAA0B,EACxB,WAAA/D,CAAYe,EAAUd,GACpBY,MAAME,EAAUd,GAChBI,KAAKiB,OAAS,IAAI,EAClBjB,KAAKgB,YAAc,aACnBhB,KAAKW,KAAO,GACZX,KAAKH,OAAS,EACdG,KAAKc,QAAU,GACfd,KAAKe,KAAO,GACZf,KAAKkB,SAAWlB,KAAKW,KACrBX,KAAKmB,UAAYnB,KAAKY,KACxB,GHK4B,GAAI,WAElCY,QAAQC,IAAI,2BIbZ,SAAcc,GACX,KAAOA,EAAQE,QAAOC,IAAWA,EAAOhB,WAAUiB,OAAS,GACzD,IAAK,IAAID,KAAUH,EACZG,EAAOhB,UACVgB,EAAOM,KAAKT,GAKlB,MAAMoB,EAASpB,EAAQqB,MAAKlB,IAAWA,EAAOhB,WAC9CF,QAAQC,IAAI,eAAekC,EAAO/D,2BAA2B+D,EAAOhD,OACvE,CJKAkD,CADc,CAACT,EAASC,EAASC,EAASC,EAASC,EAASE,G","sources":["webpack://rpg-game/./src/js/weapons/weapon.js","webpack://rpg-game/./src/js/weapons/arm.js","webpack://rpg-game/./src/js/weapons/knife.js","webpack://rpg-game/./src/js/characters/player.js","webpack://rpg-game/./src/js/weapons/sword.js","webpack://rpg-game/./src/js/characters/warrior.js","webpack://rpg-game/./src/js/weapons/bow.js","webpack://rpg-game/./src/js/characters/archer.js","webpack://rpg-game/./src/js/weapons/staff.js","webpack://rpg-game/./src/js/characters/mage.js","webpack://rpg-game/./src/js/weapons/axe.js","webpack://rpg-game/./src/js/weapons/longbow.js","webpack://rpg-game/./src/js/weapons/stormstaff.js","webpack://rpg-game/./src/index.js","webpack://rpg-game/./src/js/characters/demiurge.js","webpack://rpg-game/./src/js/characters/dwarf.js","webpack://rpg-game/./src/js/characters/crossbowman.js","webpack://rpg-game/./src/js/game.js"],"sourcesContent":["class Weapon {\r\n  constructor(name, attack, durability, range) {\r\n    this.name = name;\r\n    this.attack = attack;\r\n    this.durability = durability;\r\n    this.baseDurability = durability;\r\n    this.range = range;\r\n  }\r\n  takeDamage(damage) {\r\n    this.durability -= damage;\r\n    if (this.durability < 0) {\r\n      this.durability = 0;\r\n    }\r\n  }\r\n  getDamage() {\r\n    if (this.durability <= 0) {\r\n      return 0;\r\n    }\r\n    // текущая прочность в %%\r\n    const durPercent = (this.durability / this.baseDurability) * 100.0;\r\n    if (durPercent >= 30) {\r\n      return this.attack;\r\n    } else {\r\n      return Math.floor(this.attack / 2);\r\n    }\r\n  }\r\n  isBroken() {\r\n    return this.durability === 0;\r\n  }\r\n}\r\n\r\nexport default Weapon;\r\n","import Weapon from './weapon.js';\r\n\r\nclass Arm extends Weapon {\r\n  constructor() {\r\n    super('Рука', 1, Infinity, 1);\r\n  }\r\n}\r\n\r\nexport default Arm;","import Weapon from './weapon.js';\r\n\r\nclass Knife extends Weapon {\r\n  constructor() {\r\n    super('Нож', 5, 300, 1);\r\n  }\r\n}\r\n\r\nexport default Knife;","import Arm from '../weapons/arm.js';\r\nimport Knife from '../weapons/knife.js';\r\n\r\n\r\nclass Player {\r\n  constructor(position, name) {\r\n    this.life = 100;\r\n    this.magic = 20;\r\n    this.speed = 1;\r\n    this.attack = 10;\r\n    this.agility = 5;\r\n    this.luck = 10;\r\n    this.description = 'Игрок';\r\n    this.weapon = new Arm();\r\n    this.position = position;\r\n    this.name = name;\r\n    this.baseLife = this.life;\r\n    this.baseMagic = this.magic;\r\n  }\r\n\r\n  getLuck() {\r\n    const randomNumber = Math.floor(Math.random() * 101);\r\n    return (randomNumber + this.luck) / 100;\r\n  }\r\n\r\n  getDamage(distance) {\r\n    const weaponDamage = this.weapon.getDamage();\r\n    if (distance > this.weapon.range) {\r\n      return 0;\r\n    }\r\n    return (this.attack + weaponDamage) * this.getLuck() / distance;\r\n  }\r\n\r\n  takeDamage(damage) {\r\n    this.life -= damage;\r\n    console.log(`${this.name} получил ${damage} урона`);\r\n    if (this.life < 0) {\r\n      this.life = 0;\r\n      console.log(`${this.name} достигает нулевой отметки здоровья`);\r\n    }\r\n  }\r\n\r\n  isDead() {\r\n    return this.life === 0; \r\n  }\r\n\r\n  moveLeft(distance) {\r\n    const moveDistance = Math.min(distance, this.speed);\r\n    this.position -= moveDistance;\r\n  }\r\n\r\n  moveRight(distance) {\r\n    const moveDistance = Math.min(distance, this.speed);\r\n    this.position += moveDistance;\r\n  }\r\n\r\n  isAttackBlocked() {\r\n    return this.getLuck() > (100 - this.luck) / 100;\r\n  }\r\n\r\n  dodged() {\r\n    return this.getLuck() > (100 - this.agility - this.speed * 3) / 100;\r\n  }\r\n\r\n  takeAttack(damage) {\r\n    if (this.isAttackBlocked()) {\r\n      this.weapon.takeDamage(damage);\r\n      console.log(`${this.name} заблокировал атаку, урон по оружию: ${damage}`);\r\n      return;\r\n    }\r\n    \r\n    if (this.dodged()) {\r\n      console.log(`${this.name} уклонился от атаки`);\r\n      return;\r\n    }\r\n    \r\n    this.takeDamage(damage);\r\n    \r\n  }\r\n  \r\n  checkWeapon() {\r\n    if (this.weapon.isBroken()) {\r\n      if (this.weapon instanceof Knife) {\r\n        console.log(`${this.name} теряет нож и остается с голыми руками`);\r\n        this.weapon = new Arm(); // заменяем нож на руки\r\n       } else { //сломалось основное\r\n      this.weapon = new Knife();\r\n      }\r\n    }\r\n  }\r\n  \r\n  tryAttack(enemy) {\r\n    let damage = 0;\r\n    let distance = 0;\r\n    console.log(`${this.name} (клетка ${this.position}) пробует атаковать ${enemy.name} (клетка ${enemy.position})`);\r\n    // если на одной клетке\r\n    if (this.position === enemy.position) {\r\n      enemy.moveRight(1);\r\n      console.log(`${enemy.name} отлетает на позицию ${enemy.position} и получит удвоенный урон от ${this.name}`);\r\n      damage = this.getDamage(1); // урон в соседнюю клетку\r\n      damage *= 2; //удвоенный урон\r\n    }\r\n    else {\r\n     distance = Math.abs(this.position - enemy.position);\r\n     if (distance > this.weapon.range) {\r\n       console.log(`${this.name} с радиусом атаки ${this.weapon.range} не достаёт до ${enemy.name} на расстоянии ${distance}`);\r\n       return;\r\n     }\r\n     damage = this.getDamage(distance);\r\n    }\r\n    console.log(`рассчитан урон: ${damage}`);\r\n    console.log(`${this.name} атакует ${enemy.name} на ${damage} урона`);\r\n    \r\n    this.weapon.takeDamage(10 * this.getLuck()); // износ оружия\r\n    enemy.takeAttack(damage);\r\n    this.checkWeapon();\r\n    enemy.checkWeapon();\r\n  }\r\n\r\n  chooseEnemy(players) {\r\n    let aliveEnemies = players.filter(player => player !== this && !player.isDead());\r\n    \r\n    if (aliveEnemies.length === 0) {\r\n      return null; \r\n    }\r\n\r\n    let targetEnemy = aliveEnemies[0];\r\n    \r\n    for (let i = 1; i < aliveEnemies.length; i++) {\r\n      if (aliveEnemies[i].life < targetEnemy.life) {\r\n        targetEnemy = aliveEnemies[i];\r\n      }\r\n    }\r\n\r\n    return targetEnemy;\r\n  }\r\n\r\n  moveToEnemy(enemy) {\r\n    if (!enemy || enemy.isDead()) {\r\n      console.log(`${this.name} не может двигаться к мёртвому врагу`);\r\n      return;\r\n    }\r\n    \r\n    if (this.position - enemy.position < -1) {\r\n      let distanceToMove = Math.min(enemy.position - this.position - 1, this.speed);\r\n      console.log(`${this.name} (${this.position}) движется вправо к ${enemy.name} (${enemy.position})  на ${distanceToMove}`);\r\n      this.moveRight(distanceToMove);\r\n    } else if (this.position - enemy.position > 1) {\r\n      let distanceToMove = Math.min(this.position - enemy.position - 1, this.speed);\r\n      console.log(`${this.name} (${this.position}) движется влево к ${enemy.name} (${enemy.position}) на ${distanceToMove}`);\r\n      this.moveLeft(distanceToMove);\r\n    } else {\r\n      console.log(`${this.name} (${this.position}) уже рядом с ${enemy.name} (${enemy.position})`);\r\n    }\r\n  }\r\n\r\n  turn(players) {\r\n    console.log(`\\nХодит ${this.name} (уровень здоровья ${this.life})`);\r\n    const enemy = this.chooseEnemy(players);\r\n    \r\n    if (enemy) {\r\n      console.log(`Выбран противник ${enemy.name} (уровень здоровья ${enemy.life})`);\r\n      this.moveToEnemy(enemy);\r\n      this.tryAttack(enemy);\r\n      \r\n      if (enemy.isDead()) {\r\n        console.log(`${enemy.name} пал в бою после атаки ${this.name}`);\r\n      }\r\n    } else {\r\n      console.log(`${this.name} не нашёл врагов для атаки`);\r\n    }\r\n  }  \r\n}  \r\n\r\nexport default Player;\r\n","import Weapon from './weapon.js';\r\n\r\nclass Sword extends Weapon {\r\n  constructor() {\r\n    super('Меч', 25, 500, 1);\r\n  }\r\n}\r\n\r\nexport default Sword;","import Player from './player.js';\r\nimport Sword from '../weapons/sword.js';\r\nimport Knife from '../weapons/knife.js';\r\n\r\nclass Warrior extends Player {\r\n  \r\n  constructor(position, name) {\r\n    super(position, name);\r\n    this.life = 120;\r\n    this.attack = 10;\r\n    this.speed = 2;\r\n    this.weapon = new Sword(); // основное оружие - меч\r\n    this.description = \"Воин\";\r\n    this.baseLife = this.life;\r\n  }\r\n  \r\n  takeDamage(damage) {\r\n    let lifePercent = (this.life / this.baseLife) * 100.0;\r\n    let luck = this.getLuck();\r\n    if (lifePercent < 50 && luck > 0.8) {\r\n      if (this.magic > damage) { // если маны достаточно\r\n        this.magic -= damage;\r\n      } else {\r\n        const remainingDamage = damage - this.magic;\r\n        this.magic = 0;\r\n        this.life -= remainingDamage;\r\n      }\r\n    } else {\r\n      super.takeDamage(damage);\r\n    }\r\n    if (this.life < 0) {\r\n      this.life = 0;\r\n    }\r\n  }\r\n}\r\n\r\nexport default Warrior;\r\n","import Weapon from './weapon.js';\r\n\r\nclass Bow extends Weapon {\r\n  constructor() {\r\n    super('Лук', 10, 200, 3);\r\n  }\r\n}\r\n\r\nexport default Bow;","import Player from './player.js';\r\nimport Bow from '../weapons/bow.js';\r\nimport Knife from '../weapons/knife.js';\r\n\r\nclass Archer extends Player {\r\n  constructor(position, name) {\r\n    super(position, name);\r\n    this.life = 80;\r\n    this.magic = 35;\r\n    this.attack = 5;\r\n    this.agility = 10;\r\n    this.weapon = new Bow(); // основное оружие - лук\r\n    this.description = \"Лучник\";\r\n    this.baseLife = this.life;\r\n    this.baseMagic = this.magic;\r\n  }\r\n  getDamage(distance) {\r\n    const weaponDamage = this.weapon.getDamage();\r\n    const weaponRange = this.weapon.range;\r\n    if (distance > weaponRange) {\r\n      return 0;\r\n    }\r\n    return (this.attack + weaponDamage) * this.getLuck() * distance / weaponRange;\r\n  }\r\n}\r\n\r\nexport default Archer;\r\n","import Weapon from './weapon.js';\r\n\r\nclass Staff extends Weapon {\r\n  constructor() {\r\n    super('Посох', 8, 300, 2);\r\n  }\r\n}\r\n\r\nexport default Staff;","import Player from './player.js';\r\nimport Staff from '../weapons/staff.js';\r\nimport Knife from '../weapons/knife.js';\r\n\r\nclass Mage extends Player {\r\n  constructor(position, name) {\r\n    super(position, name);\r\n    this.life = 70;\r\n    this.magic = 100;\r\n    this.attack = 5;\r\n    this.agility = 8;\r\n    this.weapon = new Staff(); // основное оружие - посох\r\n    this.description = \"Маг\";\r\n    this.baseLife = this.life;\r\n    this.baseMagic = this.magic;\r\n  }\r\n  takeDamage(damage) {\r\n    let magicPercent = (this.magic / this.baseMagic) * 100.0;\r\n    if (magicPercent > 50) { // если мана больше чем половина\r\n      damage /= 2; // урон уменьшается в два раза\r\n      this.magic -= 12;\r\n      if (this.magic < 0) {\r\n        //const remainingDamage=damage-this.magic; // остаток урона\r\n        //damage=remainingDamage; \r\n        this.magic = 0; // устанавливаем ману в ноль\r\n      }\r\n    }\r\n    super.takeDamage(damage);\r\n  }\r\n}\r\n\r\nexport default Mage;\r\n","import Sword from './sword.js';\r\n\r\nclass Axe extends Sword {\r\n  constructor() {\r\n    super();\r\n    this.name = 'Секира';\r\n    this.attack = 27;\r\n    this.durability = 800; \r\n    this.baseDurability = this.durability;\r\n  }\r\n}\r\n\r\nexport default Axe;\r\n","import Bow from './bow.js';\r\n\r\nclass LongBow extends Bow {\r\n  constructor() {\r\n    super();\r\n    this.name = 'Длинный лук';\r\n    this.attack = 15;\r\n    this.range = 4;\r\n  }\r\n}\r\n\r\nexport default LongBow;","import Staff from './staff.js';\r\n\r\nclass StormStaff extends Staff {\r\n  constructor() {\r\n    super();\r\n    this.name = 'Посох Бури';\r\n    this.attack = 10;\r\n    this.range = 3; \r\n  }\r\n}\r\n\r\nexport default StormStaff;","import './css/style.css';\nimport './js/game.js';\nimport Warrior from './js/characters/warrior.js';\nimport Archer from './js/characters/archer.js';\nimport Mage from './js/characters/mage.js';\nimport Dwarf from './js/characters/dwarf.js';\nimport Crossbowman from './js/characters/crossbowman.js';\nimport Demiurge from './js/characters/demiurge.js';\nimport { play } from './js/game.js';\n\nconsole.log('Index module loaded. Hello world!');\n\n\nconsole.log('Creating warrior...');\nlet player1 = new Warrior(0, \"Алёша Попович\");\nconsole.log('Warrior created');\nlet player2 = new Archer(6, \"Леголас\");\nlet player3 = new Mage(4, \"Гендальф\");\nlet player4 = new Demiurge(8, \"Истас\")\nlet player5 = new Dwarf(11, \"Гримли\")\nlet player6 = new Crossbowman(13, \"Лукарий\")\n\nconsole.log('Characters were created');\n\nlet players = [player1, player2, player3, player4, player5, player6];\nplay(players); \n\n","import Mage from './mage.js';\r\nimport StormStaff from '../weapons/stormstaff.js';\r\nimport Knife from '../weapons/knife.js';\r\n\r\nclass Demiurge extends Mage {\r\n  constructor(position, name) {\r\n    super(position, name);\r\n    this.description = \"Демиург\";\r\n    this.weapon = new StormStaff(); // основное оружие - посох бури\r\n    this.life = 80;\r\n    this.magic = 120;\r\n    this.attack = 6;\r\n    this.luck = 12;\r\n    this.baseLife = this.life;\r\n    this.baseMagic = this.magic;\r\n  }\r\n  getDamage(distance) {\r\n    if (this.magic > 0 && this.getLuck() > 0.6) {\r\n      return super.getDamage(distance) * 1.5;\r\n    } else {\r\n      return super.getDamage(distance);\r\n    }\r\n  }\r\n}\r\n\r\nexport default Demiurge;\r\n","import Warrior from './warrior.js';\r\nimport Axe from '../weapons/axe.js';\r\nimport Knife from '../weapons/knife.js';\r\n\r\nclass Dwarf extends Warrior {\r\n  constructor(position, name) {\r\n    super(position, name);\r\n    this.description = \"Гном\";\r\n    this.life = 130;\r\n    this.attack = 15;\r\n    this.luck = 20;\r\n    this.weapon = new Axe();\r\n    this.baseLife = this.life;\r\n    this.baseMagic = this.magic;\r\n    this.timesDamaged = 0; //количество полученных ударов\r\n  }\r\n  takeDamage(damage) {\r\n    this.timesDamaged++; //+1 удар\r\n    if (this.getLuck() > 0.5 && timesDamaged % 6 == 0) {\r\n      damage /= 2; // уменьшение урона в два раза\r\n    }\r\n    super.takeDamage(damage);\r\n  }\r\n}\r\n\r\n\r\nexport default Dwarf;\r\n","import Archer from './archer.js';\r\nimport LongBow from '../weapons/longbow.js';\r\nimport Knife from '../weapons/knife.js';\r\n\r\nclass Crossbowman extends Archer {\r\n  constructor(position, name) {\r\n    super(position, name);\r\n    this.weapon = new LongBow(); // основное оружие - длинный лук\r\n    this.description = \"Арбалетчик\";\r\n    this.life = 85;\r\n    this.attack = 8;\r\n    this.agility = 20;\r\n    this.luck = 15;\r\n    this.baseLife = this.life;\r\n    this.baseMagic = this.magic;\r\n  }\r\n}\r\n\r\nexport default Crossbowman;\r\n","import Weapon from './weapons/weapon.js';\nimport Player from './characters/player.js';\nimport Warrior from './characters/warrior.js';\nimport Archer from './characters/archer.js';\nimport Mage from './characters/mage.js';\nimport Dwarf from './characters/dwarf.js';\nimport Crossbowman from './characters/crossbowman.js';\nimport Demiurge from './characters/demiurge.js';\n\nfunction play(players) {\n   while (players.filter(player => !player.isDead()).length > 1) {\n     for (let player of players) {\n       if (!player.isDead()) {\n         player.turn(players);\n       }\n     }\n   }\n\n   const winner = players.find(player => !player.isDead());\n   console.log(`Победитель: ${winner.name}, оставшаяся жизнь: ${winner.life}`);\n}\n\nexport { play };\n"],"names":["constructor","name","attack","durability","range","this","baseDurability","takeDamage","damage","getDamage","Math","floor","isBroken","super","Infinity","position","life","magic","speed","agility","luck","description","weapon","baseLife","baseMagic","getLuck","random","distance","weaponDamage","console","log","isDead","moveLeft","moveDistance","min","moveRight","isAttackBlocked","dodged","takeAttack","checkWeapon","tryAttack","enemy","abs","chooseEnemy","players","aliveEnemies","filter","player","length","targetEnemy","i","moveToEnemy","distanceToMove","turn","lifePercent","remainingDamage","weaponRange","player1","player2","player3","player4","player5","timesDamaged","player6","winner","find","play"],"sourceRoot":""}